col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(sample=X1,gestationalAge=X2,fetalSex=X3,maternalAge=X4,gestationalAge=X5,BMI=X6,smoker=X7,ethnicity=X8)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set up project directory
projDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/count_preprocessing/rawData"
import_SRR2014231 <- file.path(projDir, "stomach_m/SRR2014231__GRCh38_ReadsPerGene_counts.tab")
import_SRR3192449 <- file.path(projDir, "stomach_m/SRR3192449__GRCh38_ReadsPerGene_counts.tab")
import_SRR4421778 <- file.path(projDir, "stomach_m/SRR4421778__GRCh38_ReadsPerGene_counts.tab")
# Chunk 3
# import the counts tables
## SRR2014231
SRR2014231 <- read_delim(file = import_SRR2014231,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR2014231=X2)
## SRR3192449
SRR3192449 <- read_delim(file = import_SRR3192449,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3192449=X2)
## SRR4421778
SRR4421778 <- read_delim(file = import_SRR4421778,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR4421778=X2)
# Chunk 4
mergedCounts_stomach_m <- dplyr::left_join(SRR2014231,SRR3192449, by="ensembl") %>%
dplyr::left_join(.,SRR4421778, by="ensembl")
# remove rows with all zeros
mergedCounts_stomach_m <- mergedCounts_stomach_m[rowSums(mergedCounts_stomach_m[,-1])>0,]
rownames(mergedCounts_stomach_m) <- NULL
# Chunk 5
mergedCounts_stomach_m %<>% tidyr::separate(., col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right) %>%
distinct(ensembl, .keep_all = TRUE) %>%
tibble::column_to_rownames("ensembl")
# Chunk 6
# create a small data frame with information for the plot
plotCounts_stomach_m <- mergedCounts_stomach_m %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
# make the plot
ggplot(data = plotCounts_stomach_m,
aes(x=reorder(sample, totalCounts),
y=totalCounts,
colour=totalCounts<9000000)) +
geom_point(size=5) +
scale_colour_manual(name='Read count\nthreshold',
values=setNames(c('red','green'),
c(TRUE, FALSE))) +
geom_hline(yintercept=9000000,
show.legend=FALSE,
linetype="dotted",
colour="red") +
ggtitle("Raw counts stomach male - all samples\n(hg38)") +
theme_bw(base_size=16) +
labs(title="Library size",
subtitle="Raw mRNA read counts in stomach male",
x="Sample name",
y="mRNA read counts") +
theme(axis.text.x=element_text(angle=270,
hjust=1.5,
colour="black",
size=12),
axis.text.y = element_text(angle=0,
colour="black",
size=14))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set up project directory
projDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/count_preprocessing/rawData"
import_SRR980483 <- file.path(projDir, "stomach_f/SRR980483__GRCh38_ReadsPerGene_counts.tab")
import_SRR3192450 <- file.path(projDir, "stomach_f/SRR3192450__GRCh38_ReadsPerGene_counts.tab")
import_SRR4421777 <- file.path(projDir, "stomach_f/SRR4421777__GRCh38_ReadsPerGene_counts.tab")
import_SRR5309855 <- file.path(projDir, "stomach_f/SRR5309855__GRCh38_ReadsPerGene_counts.tab")
import_SRR5309856 <- file.path(projDir, "stomach_f/SRR5309856__GRCh38_ReadsPerGene_counts.tab")
import_SRR5309881 <- file.path(projDir, "stomach_f/SRR5309881__GRCh38_ReadsPerGene_counts.tab")
# Chunk 3
# import the counts tables
## SRR980483
SRR980483 <- read_delim(file = import_SRR980483,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR980483=X2)
## SRR3192450
SRR3192450 <- read_delim(file = import_SRR3192450,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3192450=X2)
## SRR4421777
SRR4421777 <- read_delim(file = import_SRR4421777,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR4421777=X2)
## SRR5309855
SRR5309855 <- read_delim(file = import_SRR5309855,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR5309855=X2)
## SRR5309856
SRR5309856 <- read_delim(file = import_SRR5309856,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR5309856=X2)
## SRR5309881
SRR5309881 <- read_delim(file = import_SRR5309881,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR5309881=X2)
# Chunk 4
mergedCounts_stomach_f <- dplyr::left_join(SRR980483,SRR3192450, by="ensembl") %>%
dplyr::left_join(.,SRR4421777, by="ensembl") %>%
dplyr::left_join(.,SRR5309855, by="ensembl") %>%
dplyr::left_join(.,SRR5309856, by="ensembl") %>%
dplyr::left_join(.,SRR5309881, by="ensembl")
# remove rows with all zeros
mergedCounts_stomach_f <- mergedCounts_stomach_f[rowSums(mergedCounts_stomach_f[,-1])>0,]
rownames(mergedCounts_stomach_f) <- NULL
# Chunk 5
mergedCounts_stomach_f %<>% tidyr::separate(., col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right) %>%
distinct(ensembl, .keep_all = TRUE) %>%
tibble::column_to_rownames("ensembl")
# Chunk 6
# create a small data frame with information for the plot
plotCounts_stomach_f <- mergedCounts_stomach_f %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
# make the plot
ggplot(data = plotCounts_stomach_f,
aes(x=reorder(sample, totalCounts),
y=totalCounts,
colour=totalCounts<9000000)) +
geom_point(size=5) +
scale_colour_manual(name='Read count\nthreshold',
values=setNames(c('red','green'),
c(TRUE, FALSE))) +
geom_hline(yintercept=9000000,
show.legend=FALSE,
linetype="dotted",
colour="red") +
ggtitle("Raw counts stomach female - all samples\n(hg38)") +
theme_bw(base_size=16) +
labs(title="Library size",
subtitle="Raw mRNA read counts in stomach female",
x="Sample name",
y="mRNA read counts") +
theme(axis.text.x=element_text(angle=270,
hjust=1.5,
colour="black",
size=12),
axis.text.y = element_text(angle=0,
colour="black",
size=14))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set up project directory
projDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/count_preprocessing/rawData"
import_SRR3191763 <- file.path(projDir, "skin_m/SRR3191763__GRCh38_ReadsPerGene_counts.tab")
import_SRR3192448 <- file.path(projDir, "skin_m/SRR3192448__GRCh38_ReadsPerGene_counts.tab")
import_SRR4421408 <- file.path(projDir, "skin_m/SRR4421408__GRCh38_ReadsPerGene_counts.tab")
# Chunk 3
# import the counts tables
## SRR3191763
SRR3191763 <- read_delim(file = import_SRR3191763,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3191763=X2)
## SRR3192448
SRR3192448 <- read_delim(file = import_SRR3192448,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3192448=X2)
## SRR4421408
SRR4421408 <- read_delim(file = import_SRR4421408,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR4421408=X2)
# Chunk 4
mergedCounts_skin_m <- dplyr::left_join(SRR3191763,SRR3192448, by="ensembl") %>%
dplyr::left_join(.,SRR4421408, by="ensembl")
# remove rows with all zeros
mergedCounts_skin_m <- mergedCounts_skin_m[rowSums(mergedCounts_skin_m[,-1])>0,]
rownames(mergedCounts_skin_m) <- NULL
# Chunk 5
mergedCounts_skin_m %<>% tidyr::separate(., col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right) %>%
distinct(ensembl, .keep_all = TRUE) %>%
tibble::column_to_rownames("ensembl")
# Chunk 6
# create a small data frame with information for the plot
plotCounts_skin_m <- mergedCounts_skin_m %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
# make the plot
ggplot(data = plotCounts_skin_m,
aes(x=reorder(sample, totalCounts),
y=totalCounts,
colour=totalCounts<9000000)) +
geom_point(size=5) +
scale_colour_manual(name='Read count\nthreshold',
values=setNames(c('red','green'),
c(TRUE, FALSE))) +
geom_hline(yintercept=9000000,
show.legend=FALSE,
linetype="dotted",
colour="red") +
ggtitle("Raw counts skin male - all samples\n(hg38)") +
theme_bw(base_size=16) +
labs(title="Library size",
subtitle="Raw mRNA read counts in skin male",
x="Sample name",
y="mRNA read counts") +
theme(axis.text.x=element_text(angle=270,
hjust=1.5,
colour="black",
size=12),
axis.text.y = element_text(angle=0,
colour="black",
size=14))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set up project directory
projDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/count_preprocessing/rawData"
import_SRR2156554 <- file.path(projDir, "skin_f/SRR2156554__GRCh38_ReadsPerGene_counts.tab")
import_SRR3191764 <- file.path(projDir, "skin_f/SRR3191764__GRCh38_ReadsPerGene_counts.tab")
import_SRR3192447 <- file.path(projDir, "skin_f/SRR3192447__GRCh38_ReadsPerGene_counts.tab")
import_SRR4421409 <- file.path(projDir, "skin_f/SRR4421409__GRCh38_ReadsPerGene_counts.tab")
# Chunk 3
# import the counts tables
## SRR2156554
SRR2156554 <- read_delim(file = import_SRR2156554,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR2156554=X2)
## SRR3191764
SRR3191764 <- read_delim(file = import_SRR3191764,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3191764=X2)
## SRR3192447
SRR3192447 <- read_delim(file = import_SRR3192447,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR3192447=X2)
## SRR4421409
SRR4421409 <- read_delim(file = import_SRR4421409,
col_names = FALSE,
delim = "\t") %>%
as.data.frame() %>%
dplyr::select(ensembl=X1,SRR4421409=X2)
# Chunk 4
mergedCounts_skin_f <- dplyr::left_join(SRR2156554,SRR3191764, by="ensembl") %>%
dplyr::left_join(.,SRR3192447, by="ensembl") %>%
dplyr::left_join(.,SRR4421409, by="ensembl")
# remove rows with all zeros
mergedCounts_skin_f <- mergedCounts_skin_f[rowSums(mergedCounts_skin_f[,-1])>0,]
rownames(mergedCounts_skin_f) <- NULL
# Chunk 5
mergedCounts_skin_f %<>% tibble::column_to_rownames("ensembl")
# Chunk 6
# create a small data frame with information for the plot
plotCounts_skin_f <- mergedCounts_skin_f %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
# make the plot
ggplot(data = plotCounts_skin_f,
aes(x=reorder(sample, totalCounts),
y=totalCounts,
colour=totalCounts<9000000)) +
geom_point(size=5) +
scale_colour_manual(name='Read count\nthreshold',
values=setNames(c('red','green'),
c(TRUE, FALSE))) +
geom_hline(yintercept=9000000,
show.legend=FALSE,
linetype="dotted",
colour="red") +
ggtitle("Raw counts skin female - all samples\n(hg38)") +
theme_bw(base_size=16) +
labs(title="Library size",
subtitle="Raw mRNA read counts in skin female",
x="Sample name",
y="mRNA read counts") +
theme(axis.text.x=element_text(angle=270,
hjust=1.5,
colour="black",
size=12),
axis.text.y = element_text(angle=0,
colour="black",
size=14))
# load relevant libraries
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/libsize"
# set path for data tables
import_metadata <- file.path(projectDir, "library_size_metadata.csv")
import_fetal_rawcounts <- file.path(projectDir, "fetal_rawcounts.csv")
# import meta data table
metaData <- read_delim(file = import_metadata,
col_names = TRUE,
delim = ",")
## remane "sampleID" to sample for consistency across tables
colnames(metaData) <- c("sample", "Tissue", "Sex", "Gestational Age")
## make first letter of all characters in "Tissue" and "Sex" column upper-case and change
metaData %<>% dplyr::mutate(., Tissue = paste(str_to_title(Tissue))) %>%
dplyr::mutate(., Sex = paste(str_to_title(Sex))) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_mid", replacement = " Mid")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_early", replacement = " Early")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_term", replacement = " Term"))
# import mid-gestation and other fetal tissue rawcounts table
mid_fetal <- read_delim(file = import_fetal_rawcounts,
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(mid_fetal) <- gsub("...1", "ensembl", colnames(mid_fetal), fixed = TRUE)
# import early-gestation placenta rawcounts tables
## female
earlyF <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/rawCounts_placentaF_early.csv"),
col_names = TRUE,
delim = ",")
# import meta data table
metaData <- read_delim(file = import_metadata,
col_names = TRUE,
delim = ",")
## remane "sampleID" to sample for consistency across tables
colnames(metaData) <- c("sample", "Tissue", "Sex", "Gestational Age")
## make first letter of all characters in "Tissue" and "Sex" column upper-case and change
metaData %<>% dplyr::mutate(., Tissue = paste(str_to_title(Tissue))) %>%
dplyr::mutate(., Sex = paste(str_to_title(Sex))) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_mid", replacement = " Mid")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_early", replacement = " Early")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_term", replacement = " Term"))
# import mid-gestation and other fetal tissue rawcounts table
mid_fetal <- read_delim(file = import_fetal_rawcounts,
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(mid_fetal) <- gsub("...1", "ensembl", colnames(mid_fetal), fixed = TRUE)
# import early-gestation placenta rawcounts tables
## female
earlyF <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/rawCounts_placentaF_early.csv"),
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(earlyF) <- gsub("...1", "ensembl", colnames(earlyF), fixed = TRUE)
## male
earlyM <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/rawCounts_placentaM_early.csv"),
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(earlyM) <- gsub("...1", "ensembl", colnames(earlyM), fixed = TRUE)
# import term placenta rawcounts tables
term <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData/rawCounts_term_placenta.csv"),
col_names = TRUE,
delim = ",")
# import term placenta rawcounts tables
term <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData/rawCounts_term_placenta.csv"),
col_names = TRUE,
delim = ",")
total_rawCounts <- dplyr::full_join(mid_fetal, earlyF, by = "ensembl") %>%
dplyr::full_join(., earlyM, by = "ensembl") %>%
dplyr::full_join(., term, by = "ensembl")
## remane "...1" ensembl
colnames(term) <- gsub("...1", "ensembl", colnames(term), fixed = TRUE)
total_rawCounts <- dplyr::full_join(mid_fetal, earlyF, by = "ensembl") %>%
dplyr::full_join(., earlyM, by = "ensembl") %>%
dplyr::full_join(., term, by = "ensembl")
# check if any NA values were introduced
sum(is.na(total_rawCounts))
# replace NA values with zeros
total_rawCounts[is.na(total_rawCounts)] <- 0
# check for any duplications of ensembl IDs
sum(duplicated(total_rawCounts$ensembl))
View(total_rawCounts)
# make ensembl column row names
rownames(total_rawCounts) <- NULL
total_rawCounts %<>% tibble::column_to_rownames(., var = "ensembl")
# create a small data frame with information for the plot - sample name and total counts
plotCounts <- total_rawCounts %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
View(plotCounts)
library(hrbrthemes)
library(viridis)
# left join libsize table to metadata by sample
heatplot <- dplyr::left_join(metaData, plotCounts, by = "sample") %>%
tibble::column_to_rownames(., var = "sample")
# check for any NA values and remove those rows
na_rows <- apply(heatplot, 1, function(x) any(is.na(x)))
heatplot <- heatplot[!na_rows, ]
View(total_rawCounts)
View(plotCounts)
View(heatplot)
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts / 1e6, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts (per million)") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000 / 1e6, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718 / 1e6, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off")) +
scale_y_continuous(breaks = c(10, 25, 50, 75, 100, 125))
