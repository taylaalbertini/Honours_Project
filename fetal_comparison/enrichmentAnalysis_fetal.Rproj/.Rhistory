summaryTerms_female <- dplyr::filter(reducedTerms_midF, parentTerm %in% c("multicellular organismal process", "carbohydrate metabolic process", "G-protein alpha-subunit binding", "insulin-like growth factor II binding", "tissue development", "response to stimulus", "system development", "estrogen response element binding", "positive regulation of cytokine production"))
## add a column defning sex
summaryTerms_female$tissue <- "Mid-gestation Placenta (Female)"
# select for summary GO terms
summaryTerms_male <- dplyr::filter(reducedTerms_midM, parentTerm %in% c("cell differentiation", "anatomical structure morphogenesis", "multicellular organismal process", "follicle-stimulating hormone secretion", "actin filament capping", "lipoprotein lipid oxidation", "reactive oxygen species metabolic process", "carbohydrate metabolic process", "G-protein alpha-subunit binding", "BMP binding", "insulin-like growth factor binding", "tissue development", "response to stimulus"))
## add a column defining the sex
summaryTerms_male$tissue <- "Mid-gestation Placenta (Male)"
# combine the symmaryTerms dfs
summaryTerms <- rbind(summaryTerms_female, summaryTerms_male)
# create a dot plot
summaryTerms %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#B8E186"))
ggsave("mid_go_point.png", width = 7, height = 7, units = "in")
ggsave("mid_go_point.png", width = 8.5, height = 7, units = "in")
# load relevant libraries
library(ggkegg)
library(tidygraph)
library(scatterpie)
library(dplyr)
library(readxl)
library(readr)
library(edgeR)
library(limma)
library(Glimma)
library(clusterProfiler)
library(enrichplot)
library(stringr)
library(magrittr)
library(RColorBrewer)
library(gprofiler2)
library(forcats)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/fetal_comparison/readCounts_analysis/rawData"
# set path for depleted gene tables
import_placentaF_depleted <- file.path(projectDir, "placentaF_depleted_annotated.csv")
import_placentaM_depleted <- file.path(projectDir, "placentaM_depleted_annotated.csv")
# import placenta female depleted table and make it into a data frame
placentaF_depleted <- read_delim(import_placentaF_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame() %>%
## tidy placentaF_depleted - remove the "...1" column
dplyr::select(., -...1)
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placentaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame() %>%
## tidy placentaM_depleted - remove the "...1" column
dplyr::select(., -...1)
placentaF_ordered <- placentaF_depleted[order(placentaF_depleted$nCPM_ratio_TMM, decreasing = TRUE),]
# perform GO enrichment analysis on ordered genes
placentaF_ordered_enriched <- gost(placentaF_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE,
correction_method = "fdr",
evcodes = TRUE)
placentaM_ordered <- placentaM_depleted[order(placentaM_depleted$nCPM_5_TMM, decreasing = TRUE),]
# perform GO enrichment on ordered genes
placentaM_ordered_enriched <- gost(placentaM_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE,
correction_method = "fdr",
evcodes = TRUE)
library(rrvgo)
library(ComplexHeatmap)
# BP
## create similarity matrix for GO terms of BP source
simMatrix_BP <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "BP",
method = "Rel")
## set scores
scores <- setNames(-log10(placentaF_ordered_enriched$result$p_value), placentaF_ordered_enriched$result$term_id)
## reduce the number of terms based on the similarity matrix for BP terms
reducedTerms_BP <- reduceSimMatrix(simMatrix_BP,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_BP$source <- "BP"
# MF
## create similarity matrix for GO terms of MF source
simMatrix_MF <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "MF",
method = "Rel")
## reduce the number of terms based on the similarity matrix for MF terms
reducedTerms_MF <- reduceSimMatrix(simMatrix_MF,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_MF$source <- "MF"
# CC
## create similarity matrix for GO terms of CC source
simMatrix_CC <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "CC",
method = "Rel")
## reduce the number of terms based on the similarity matrix for CC terms
reducedTerms_CC <- reduceSimMatrix(simMatrix_CC,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_CC$source <- "CC"
simMatrixM_BP <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "BP",
method = "Rel")
## set scores
scoresM <- setNames(-log10(placentaM_ordered_enriched$result$p_value), placentaM_ordered_enriched$result$term_id)
## reduce the number of terms based on the similarity matrix for BP terms
reducedTermsM_BP <- reduceSimMatrix(simMatrixM_BP,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_BP$source <- "BP"
# MF
## create similarity matrix for GO terms of MF source
simMatrixM_MF <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "MF",
method = "Rel")
## reduce the number of terms based on the similarity matrix for MF terms
reducedTermsM_MF <- reduceSimMatrix(simMatrixM_MF,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_MF$source <- "MF"
# CC
## create similarity matrix for GO terms of CC source
simMatrixM_CC <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "CC",
method = "Rel")
## reduce the number of terms based on the similarity matrix for CC terms
reducedTermsM_CC <- reduceSimMatrix(simMatrixM_CC,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_CC$source <- "CC"
reduced_BP <- dplyr::select(reducedTerms_BP, parent, parentTerm, size, source)
reduced_MF <- dplyr::select(reducedTerms_MF, parent, parentTerm, size, source)
reduced_CC <- dplyr::select(reducedTerms_CC, parent, parentTerm, size, source)
reducedM_BP <- dplyr::select(reducedTermsM_BP, parent, parentTerm, size, source)
reducedM_MF <- dplyr::select(reducedTermsM_MF, parent, parentTerm, size, source)
reducedM_CC <- dplyr::select(reducedTermsM_CC, parent, parentTerm, size, source)
# merge tables
reducedTerms_female <- rbind(reduced_BP, reduced_MF) %>%
rbind(., reduced_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
reducedTerms_male <- rbind(reducedM_BP, reducedM_MF) %>%
rbind(., reducedM_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
summaryTerms_female <- dplyr::filter(reducedTerms_female, parentTerm %in% c("regulation of anatomical structure morphogenesis", "positive regulation of phosphorus metabolic process", "synapse organization", "smooth muscle tissue development", "regulation of fatty acid oxidation", "fatty acid oxidation", "response to folic acid", "microtubule severing ATPase activity", "integrin binding", "trans-1,2-dihydrobenzene-1,2-diol dehydrogenase activity"))
## add a column defning sex
summaryTerms_female$tissue <- "Mid-gestation Placenta (Female)"
# select for summary GO terms
summaryTerms_male <- dplyr::filter(reducedTerms_male, parentTerm %in% c("vitamin B6 binding", "sulfur compound binding", "integrin binding", "microtubule severing ATPase activity", "trans-1,2-dihydrobenzene-1,2-diol dehydrogenase activity", "thrombin-activated receptor activity"))
## add a column defining the sex
summaryTerms_male$tissue <- "Mid-gestation Placenta (Male)"
# combine the symmaryTerms dfs
summaryTerms <- rbind(summaryTerms_female, summaryTerms_male)
# create a dot plot
summaryTerms %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#B8E186"))
# create a dot plot
summaryTerms %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#B8E186"))
ggsave("fetal_go_point.png", width = 8.5, height = 7, units = "in")
# Chunk 1
library(stringr)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(ggkegg)
library(tidygraph)
library(scatterpie)
library(dplyr)
library(readxl)
library(readr)
library(edgeR)
library(limma)
library(Glimma)
library(clusterProfiler)
library(enrichplot)
library(gprofiler2)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_placentaF_depleted <- file.path(projectDir, "term_placentaF_depleted_annotated.csv")
import_placnetaM_depleted <- file.path(projectDir, "term_placentaM_depleted_annotated.csv")
# Chunk 2
# import placenta female depleted table and make it into a data frame
placentaF_depleted <- read_delim(import_placentaF_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy placentaF_depleted - remove the "...1" column
placentaF_depleted <- dplyr::select(placentaF_depleted, -...1)
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placnetaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy placentaM_depleted - remove the "...1" column
placentaM_depleted <- dplyr::select(placentaM_depleted, -...1)
placentaF_ordered <- placentaF_depleted[order(placentaF_depleted$nCPM_ratio_TMM, decreasing = TRUE),]
# perform GO enrichment analysis on ordered genes
placentaF_ordered_enriched <- gost(placentaF_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE,
correction_method = "fdr",
evcodes = TRUE)
placentaM_ordered <- placentaM_depleted[order(placentaM_depleted$nCPM_ratio_TMM, decreasing = TRUE),]
# perform GO enrichment on ordered genes
placentaM_ordered_enriched <- gost(placentaM_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE,
correction_method = "fdr",
evcodes = TRUE)
library(rrvgo)
library(ComplexHeatmap)
# BP
## create similarity matrix for GO terms of BP source
simMatrix_BP <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "BP",
method = "Rel")
## set scores
scores <- setNames(-log10(placentaF_ordered_enriched$result$p_value), placentaF_ordered_enriched$result$term_id)
## reduce the number of terms based on the similarity matrix for BP terms
reducedTerms_BP <- reduceSimMatrix(simMatrix_BP,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_BP$source <- "BP"
# MF
## create similarity matrix for GO terms of MF source
simMatrix_MF <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "MF",
method = "Rel")
## reduce the number of terms based on the similarity matrix for MF terms
reducedTerms_MF <- reduceSimMatrix(simMatrix_MF,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_MF$source <- "MF"
# CC
## create similarity matrix for GO terms of CC source
simMatrix_CC <- calculateSimMatrix(placentaF_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "CC",
method = "Rel")
## reduce the number of terms based on the similarity matrix for CC terms
reducedTerms_CC <- reduceSimMatrix(simMatrix_CC,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scores)
## add the source to table
reducedTerms_CC$source <- "CC"
simMatrixM_BP <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "BP",
method = "Rel")
## set scores
scoresM <- setNames(-log10(placentaM_ordered_enriched$result$p_value), placentaM_ordered_enriched$result$term_id)
## reduce the number of terms based on the similarity matrix for BP terms
reducedTermsM_BP <- reduceSimMatrix(simMatrixM_BP,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_BP$source <- "BP"
# MF
## create similarity matrix for GO terms of MF source
simMatrixM_MF <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "MF",
method = "Rel")
## reduce the number of terms based on the similarity matrix for MF terms
reducedTermsM_MF <- reduceSimMatrix(simMatrixM_MF,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_MF$source <- "MF"
# CC
## create similarity matrix for GO terms of CC source
simMatrixM_CC <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "CC",
method = "Rel")
## reduce the number of terms based on the similarity matrix for CC terms
reducedTermsM_CC <- reduceSimMatrix(simMatrixM_CC,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_CC$source <- "CC"
reduced_BP <- dplyr::select(reducedTerms_BP, parent, parentTerm, size, source)
reduced_MF <- dplyr::select(reducedTerms_MF, parent, parentTerm, size, source)
reduced_CC <- dplyr::select(reducedTerms_CC, parent, parentTerm, size, source)
reducedM_BP <- dplyr::select(reducedTermsM_BP, parent, parentTerm, size, source)
reducedM_MF <- dplyr::select(reducedTermsM_MF, parent, parentTerm, size, source)
reducedM_CC <- dplyr::select(reducedTermsM_CC, parent, parentTerm, size, source)
reducedTerms_termF <- rbind(reduced_BP, reduced_MF) %>%
rbind(., reduced_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
reducedTerms_termM <- rbind(reducedM_BP, reducedM_MF) %>%
rbind(., reducedM_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
summaryTerms_female <- dplyr::filter(reducedTerms_termF, parentTerm %in% c("developmental process", "fat-soluble vitamin catabolic process", "cholesterol transfer activity", "cholesterol metabolic process", "phospholipid metabolic process", "high-density lipoprotein particle clearance", "phosphatidylcholine biosynthetic process", "fructokinase activity", "ipid binding", "negative regulation of gluconeogenesis", "phospholipid metabolic process", "endoplasmic reticulum lumen"))
## add a column defning sex
summaryTerms_female$tissue <- "Mid-gestation Placenta (Female)"
# select for summary GO terms
summaryTerms_male <- dplyr::filter(reducedTerms_termM, parentTerm %in% c("developmental process", "fat-soluble vitamin catabolic process", "cholesterol transfer activity", "cholesterol metabolic process", "phospholipid metabolic process", "high-density lipoprotein particle clearance", "phosphatidylcholine biosynthetic process", "positive regulation of carbohydrate metabolic process", "endoplasmic reticulum lumen"))
## add a column defining the sex
summaryTerms_male$tissue <- "Mid-gestation Placenta (Male)"
# combine the symmaryTerms dfs
summaryTerms <- rbind(summaryTerms_female, summaryTerms_male)
# create a dot plot
summaryTerms %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#E41A1C",  "#B8E186"))
ggsave("term_go_point.png", width = 8.5, height = 7, units = "in")
# Chunk 1
library(stringr)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(ggkegg)
library(tidygraph)
library(scatterpie)
library(dplyr)
library(readxl)
library(readr)
library(edgeR)
library(limma)
library(Glimma)
library(clusterProfiler)
library(enrichplot)
library(gprofiler2)
library(forcats)
library(rrvgo)
library(ComplexHeatmap)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/term_sex_specific_analysis/rawData"
import_placentaF_depleted <- file.path(projectDir, "termF_placenta_depleted_annotated.csv")
import_placnetaM_depleted <- file.path(projectDir, "termM_placenta_depleted_annotated.csv")
# Chunk 2
# import placenta female depleted table and make it into a data frame
placentaF_depleted <- read_delim(import_placentaF_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame() %>%
## tidy placentaF_depleted - remove the "...1" column
dplyr::select(., -...1)
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placnetaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame() %>%
## tidy placentaM_depleted - remove the "...1" column
dplyr::select(., -...1)
placentaM_ordered <- placentaM_depleted[order(placentaM_depleted$nCPM_ratio_TMM, decreasing = TRUE),]
# perform enrichment on ordered genes
placentaM_ordered_enriched <- gost(placentaM_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE,
evcodes = TRUE)
simMatrixM_BP <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "BP",
method = "Rel")
## set scores
scoresM <- setNames(-log10(placentaM_ordered_enriched$result$p_value), placentaM_ordered_enriched$result$term_id)
## reduce the number of terms based on the similarity matrix for BP terms
reducedTermsM_BP <- reduceSimMatrix(simMatrixM_BP,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_BP$source <- "BP"
# CC
## create similarity matrix for GO terms of CC source
simMatrixM_CC <- calculateSimMatrix(placentaM_ordered_enriched$result$term_id,
orgdb = "org.Hs.eg.db",
ont = "CC",
method = "Rel")
## reduce the number of terms based on the similarity matrix for CC terms
reducedTermsM_CC <- reduceSimMatrix(simMatrixM_CC,
threshold = 0.85,
orgdb = "org.Hs.eg.db",
scoresM)
## add the source to table
reducedTermsM_CC$source <- "CC"
reducedM_BP <- dplyr::select(reducedTermsM_BP, parent, parentTerm, size, source)
reducedM_CC <- dplyr::select(reducedTermsM_CC, parent, parentTerm, size, source)
reducedTerms_termM <- rbind(reducedM_BP, reducedM_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
## export reduced mid male terms
write.csv(reducedTerms_termM, file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/fetal_comparison/enrichmentAnalysis_fetal.Rproj/raw_data/reducedTerms_termM_sexSpecific.csv"))
# male plot
reducedTerms_termM %>%
mutate(parentTerm = fct_reorder(parentTerm, desc(size))) %>%
ggplot( aes(x=parentTerm, y=size, fill = source)) +
geom_bar(stat="identity", alpha=.8, width=.7) +
coord_flip() +
labs(x = "GO Term", y = "Number of Associations", fill = "Source") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 300)) +
scale_fill_manual(values = c("#9ECAE1", "#E41A1C", "#B8E186"))
# create a dot plot
reducedTerms_termM %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#E41A1C", "#B8E186"))
# create a dot plot
reducedTerms_termM %>%
mutate(parentTerm = fct_reorder(parentTerm, desc(size))) %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#E41A1C", "#B8E186"))
reducedTerms_termM <- rbind(reducedM_BP, reducedM_CC) %>%
group_by(parentTerm, source) %>%
summarise(size = sum(size), .groups = 'drop')
View(reducedTerms_termM)
reducedTerms_termM$tissue <- "Term Placenta (Male)"
# create a dot plot
reducedTerms_termM %>%
ggplot( aes(x=tissue, y=parentTerm, color = source, size = size)) +
geom_point(stat="identity", show.legend = TRUE) +
labs(x = "Tissue", y = "Parent GO Term", color = "Source", size = "Number of Associations") +
theme_bw() +
theme(text = element_text(size = 10, family = "Times New Roman"),
axis.text = element_text(color = "black"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
legend.text = element_text(size = 10)) +
scale_color_manual(values = c("#9ECAE1", "#E41A1C", "#B8E186"))
ggsave("termM_go_point.png", width = 7, height = 7, units = "in")
