## change gene ensembls from being row names to its own column, matching the format of rankComparison_male_TMM
tibble::rownames_to_column("geneid")
### remove "_Rank" from the end of the geneids
ranked_male_DESq <- tidyr::separate(
ranked_male_DESq,
col = geneid,
into = c("geneid", "right"),
sep = "_Rank") %>%
mutate(geneid = str_remove(geneid, "_Rank")) %>%
dplyr::select(-right)
# rename to sex_tissue_rank
colnames(ranked_male_DESq) <- gsub("male_placenta_mid", "male_placenta_mid_rank", colnames(ranked_male_DESq))
colnames(ranked_male_DESq) <- gsub("male_placenta_term", "male_placenta_term_rank", colnames(ranked_male_DESq))
# create the nCPMs table in the same format as rank table so they can be joined
## transpose the data frame, flips rows and columns (rows become columns and columns become rows)
nCPMs_male_DESq <- data.frame(mean_male_cpms_DESq_cp) %>%
tibble::column_to_rownames(., var = "sex_tissue") %>%
t() %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_male_TMM
tibble::rownames_to_column("geneid")
# rename to sex_tissue_cpm
colnames(nCPMs_male_DESq) <- gsub("male_placenta_mid", "male_placenta_mid_cpm", colnames(nCPMs_male_DESq))
colnames(nCPMs_male_DESq) <- gsub("male_placenta_term", "male_placenta_term_cpm", colnames(nCPMs_male_DESq))
# combine via left_join nCPMs_male_DESq and ranked_male_TMM
nCPMs_rank_male <- dplyr::left_join(ranked_male_DESq, nCPMs_male_DESq, copy = TRUE, by = join_by(geneid))
# select for when placenta_rank = 2
placenta_male_2_DESq <- subset(nCPMs_rank_male, male_placenta_term_rank == "2")
# filter for where rank = 1 and cpm > 1
nCPM_rank_1_DESq <- dplyr::filter(placenta_male_2_DESq, male_placenta_mid_rank == "1" & male_placenta_mid_cpm > 1)
# separate _cpm  and _rank into its own table again
## separate cpm into its own table
nCPM_1_DESq <- tibble::column_to_rownames(nCPM_rank_1_DESq, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_cpm"))
## separate rank into its own table
rank_1_DESq <- tibble::column_to_rownames(nCPM_rank_1_DESq, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_rank"))
# convert cpm_1_TMM into long form
## convert rows into a column
nCPM_1_DESq_long <- tibble::rownames_to_column(nCPM_1_DESq, var = "geneid")
## rename, remove "_cpm"
names(nCPM_1_DESq_long) <- gsub("_cpm", "", names(nCPM_1_DESq_long))
#convert into long form
nCPM_1_DESq_long <- tidyr::gather(nCPM_1_DESq_long, tissue, cpm, male_placenta_mid, male_placenta_term)
# convert rank_1_TMM into long form
## convert rows into a column
rank_1_DESq_long <- tibble::rownames_to_column(rank_1_DESq, var = "geneid")
## rename, remove "_cpm"
names(rank_1_DESq_long) <- gsub("_rank", "", names(rank_1_DESq_long))
#convert into long form
rank_1_DESq_long <- tidyr::gather(rank_1_DESq_long, tissue, rank, male_placenta_mid, male_placenta_term)
rank_1_DESq_long_2 <- dplyr::filter(rank_1_DESq_long, rank == "1")
# join the long form tables - nCPM_1_TMM_long and rank_5_TMM
nCPM_rank_1_DESq_long <- dplyr::left_join(rank_1_DESq_long_2, nCPM_1_DESq_long, by = c("geneid", "tissue"))
## rename cpm to nCPM_5
colnames(nCPM_rank_1_DESq_long) <- gsub("cpm", "nCPM_1", colnames(nCPM_rank_1_DESq_long))
# create a long df of just placenta_rank == 6  with ensembl IDs and cpms
## create a long df with just the instances where placenta = 6
rank_placenta_long <- filter(rank_1_DESq_long, rank == "2")
## join nCPM_5_TMM_long to rank_placenta_long to create placenta rank 6 cpms table
placenta_2_nCPM <- dplyr::left_join(rank_placenta_long, nCPM_1_DESq_long, by = c("geneid", "tissue"))
### rename so they are unique
colnames(placenta_2_nCPM) <- gsub("cpm", "nCPM_2", colnames(placenta_2_nCPM))
### remove rank and tissue columns
placenta_2_nCPM <- dplyr::select(placenta_2_nCPM, -tissue, -rank)
# join placenta_2_nCPM and nCPM_rank_5_TMM_long creating a df with both the nCPMs of rank 5 and 6
nCPM1_nCPM2_DESq_male <- dplyr::left_join(nCPM_rank_1_DESq_long, placenta_2_nCPM, by = "geneid")
# create a new column nCPM5/nCPM6
nCPM1_nCPM2_DESq_male$nCPM_ratio <- nCPM1_nCPM2_DESq_male$nCPM_1 / nCPM1_nCPM2_DESq_male$nCPM_2
# select for nCPM_ratio > 3
placenta_f_depleted_DESq <- nCPM1_nCPM2_DESq_male[nCPM1_nCPM2_DESq_male$nCPM_ratio >3,]
# replace gneeid with ensembl
colnames(placenta_f_depleted_DESq) <- gsub("geneid", "ensembl", colnames(placenta_f_depleted_DESq))
write.csv(placenta_f_depleted_DESq, file = file.path(projectDir, "DESq_placentaM_term_depleted.csv"))
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(Glimma)
library(RColorBrewer)
library(IRanges)
library(GenomicFeatures)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_mid_placentaF <- file.path(projectDir, "rawCounts_placentaF_mid.csv")
import_mid_placentaM <- file.path(projectDir, "rawCounts_placentaM_mid.csv")
import_term_placenta <- file.path(projectDir, "rawCounts_term_placenta.csv")
import_metaData_term <- file.path(projectDir, "metaData_term.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# import the counts tables
# placentaF_early
placentaF_mid <- read_delim(file = import_mid_placentaF,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
placentaF_mid <- placentaF_mid[,-1]
# placentaM_early
placentaM_mid <- read_delim(file = import_mid_placentaM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
placentaM_mid <- placentaM_mid[,-1]
# placenta_term
placenta_term <- read_delim(file = import_term_placenta,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensembl = ...1, everything()) %>%
as.data.frame()
# metaData
metaData <- read_delim(file = import_metaData_term,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
# import the gencodev32_gff_inFile file
all_gencode_v29 <- rtracklayer::import(input_genome_gff3_file)
# this file contains more information than we need here
# subset out only the columns we need
gene_data <- data.frame(ensembl = all_gencode_v29@elementMetadata$gene_id,
hgnc_symbol = all_gencode_v29@elementMetadata$gene_name,
seqnames = all_gencode_v29@seqnames,
gene_type = all_gencode_v29@elementMetadata$gene_type)
# we're left with multiple identical rows, keep one each
gencode_v29_gene_id_symbol_chr_biotype <- gene_data %>%
dplyr::distinct(., .keep_all = TRUE)
# which leaves us with the following dimensions where there is a unique combination of ensembl ID, hgnc symbol and chromosome
dim(gencode_v29_gene_id_symbol_chr_biotype) # 64837 3
# this does however, leave us with duplicate ensembl IDs
dim(gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]) # 64792 3
# after generating a table to see the duplicates I can see that this is an X/Y chromosome issue. All genes are assigned to both chromosomes
duplicate_rows <- gencode_v29_gene_id_symbol_chr_biotype[duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl_gene_id) | duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl, fromLast = TRUE),]
# remove duplicates (we don't use the chromosome information for anything)
gencode <- gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]
# merge countsTables to create total rawCounts df
total_rawCounts_termPlacenta <- dplyr::full_join(placentaF_mid, placentaM_mid, by = "ensembl") %>%
dplyr::full_join(.,placenta_term, by = "ensembl")
# replace any NA values with zero
total_rawCounts_termPlacenta[is.na(total_rawCounts_termPlacenta)] <- 0
# subset gencode to only include protein coding genes
gencode_protein <- dplyr::filter(gencode, gene_type == "protein_coding")
# subset total rawCounts to only include protein coding genes
## make ensembl row names
total_rawCounts <- tibble::column_to_rownames(total_rawCounts_termPlacenta, var = "ensembl")
# filter for protein coding genes only
rawCounts_protein <- subset(total_rawCounts, rownames(total_rawCounts) %in% gencode_protein$ensembl)
# correct for batch effects before DESq2 normalisation and DGEobject creation
rawCounts_protein <- limma::removeBatchEffect(rawCounts_protein)
# create DESeq2 matrix
DESq_rawCounts <- DESeqDataSetFromMatrix(countData = rawCounts_protein,
colData = metaData,
design = ~ tissue)
# estimate size factors for normalisation
dds <- estimateSizeFactors(DESq_rawCounts)
# get normalised counts
rawCounts_DESq <- counts(dds, normalized = TRUE)
# convert normalised counts into CPM
cpm_rawCounts_DESq <- cpm(rawCounts_DESq, log = FALSE)
# pre-plot process
dge_unnorm <- total_rawCounts
dge_norm <- rawCounts_DESq
# box plot of normalised expression distribution
par(mfrow=c(1,2))
lcpm_norm <- cpm(dge_norm, log=TRUE)
boxplot(lcpm_norm, ylab="Log-cpm", las=2, col=blues9, main="Normalised data")
# box plot of normalised expression distribution
par(mfrow=c(1,2))
lcpm_norm <- cpm(dge_unnorm, log=TRUE)
boxplot(lcpm_norm, ylab="Log-cpm", las=2, col=blues9, main="Normalised data")
# box plot of normalised expression distribution
par(mfrow=c(1,2))
lcpm_norm <- cpm(dge_norm, log=TRUE)
boxplot(lcpm_norm, ylab="Log-cpm", las=2, col=blues9, main="Normalised data")
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_TMM_depletedM <- file.path(projectDir, "TMM_placentaM_term_depleted.csv")
import_DESq_depletedM <- file.path(projectDir, "DESq_placentaM_term_depleted.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# TMM_depletedM
TMM_depletedM <- read_delim(file = import_TMM_depletedm,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_TMM_depletedM <- file.path(projectDir, "TMM_placentaM_term_depleted.csv")
import_DESq_depletedM <- file.path(projectDir, "DESq_placentaM_term_depleted.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# TMM_depletedM
TMM_depletedM <- read_delim(file = import_TMM_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
TMM_depletedM <- TMM_depletedM[,-1]
# DESq_depletedM
DESq_depletedM <- read_delim(file = import_DESq_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
DESq_depletedM <- DESq_depletedM[,-1]
# import the gencodev32_gff_inFile file
all_gencode_v29 <- rtracklayer::import(input_genome_gff3_file)
# this file contains more information than we need here
# subset out only the columns we need
gene_data <- data.frame(ensembl = all_gencode_v29@elementMetadata$gene_id,
hgnc_symbol = all_gencode_v29@elementMetadata$gene_name,
seqnames = all_gencode_v29@seqnames,
gene_type = all_gencode_v29@elementMetadata$gene_type)
# we're left with multiple identical rows, keep one each
gencode_v29_gene_id_symbol_chr_biotype <- gene_data %>%
dplyr::distinct(., .keep_all = TRUE)
# which leaves us with the following dimensions where there is a unique combination of ensembl ID, hgnc symbol and chromosome
dim(gencode_v29_gene_id_symbol_chr_biotype) # 64837 3
# this does however, leave us with duplicate ensembl IDs
dim(gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]) # 64792 3
# after generating a table to see the duplicates I can see that this is an X/Y chromosome issue. All genes are assigned to both chromosomes
duplicate_rows <- gencode_v29_gene_id_symbol_chr_biotype[duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl) | duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl, fromLast = TRUE),]
# remove duplicates (we don't use the chromosome information for anything)
gencode <- gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]
# tidy the TMM and DESq2 normalised dfs
## filter the df to only including the relevant pieces of information and make specific to normalisation technique
# TMM
## remove rank column
TMM_depletedM <- TMM_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(TMM_depletedM) <- gsub("tissue", "tissue_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_1", "nCPM_1_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_2", "nCPM_term_placenta_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_TMM", colnames(TMM_depletedM))
# DESq
## remove rank column
DESq_depletedM <- DESq_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(DESq_depletedM) <- gsub("tissue", "tissue_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_1", "nCPM_1_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_2", "nCPM_term_placenta_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_DESq", colnames(DESq_depletedM))
## test to ensure there are no duplicated ensembl names
sum(duplicated(TMM_depletedM$ensembl))
# left join TMM_depletedM to DESq_depletedM
placentaM_depleted <- dplyr::inner_join(TMM_depletedM, DESq_depletedM, by = join_by(ensembl))
# left join gene signature with depleted ensembl id
# left join genecode and placentaM_depleted
placentaM_depleted_annotated <- dplyr::left_join(placentaM_depleted, gencode, by = join_by(ensembl))
# tidy placentaM_depleted_annotated
## remove seqnames and genetype columns
placentaM_depleted_annotated <- dplyr::select(placentaM_depleted_annotated, -seqnames, -gene_type)
## remove the period and numbers thereafter
placentaM_depleted_annotated_2 <- tidyr::separate(placentaM_depleted_annotated, col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
deps <- c("ensembldb", "AnnotationHub")
sapply(deps, function(x){
if (!require(x, quietly = TRUE, character.only = TRUE))
BiocManager::install(x)
})
library(ensembldb)
library(AnnotationHub)
# lets take a snapshot of the AnnotationHub data base
ah <- AnnotationHub(ask = FALSE)
# take a look at the information inside
mcols(ah)
# use the `query()` function to extract the information for humans
ensdb_homo <- query(ah, c("EnsDb", "Homo sapiens"))
# keep only the information for AH95744 (which is the same as your gencode V29)
ensdb_104 <- ensdb_homo[["AH95744"]]
# Extract gene-level information and take a look
genes(ensdb_104, return.type = "data.frame") %>% View()
# now put that gene-level information into a data frame
genes_info <- genes(ensdb_104, return.type = "data.frame")
# left join genes_info with placentaM_depleted_annotated_2
## change geneid column name to ensembl
colnames(genes_info) <- gsub("gene_id", "ensembl", colnames(genes_info))
## left join the dfs
placentaM_depleted_annotated_2 <- dplyr::left_join(placentaM_depleted_annotated_2, genes_info, by = join_by(ensembl))
## tidy the df
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -11:-17)
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -12:-15)
import_placnetaM_depleted <- file.path(projectDir, "term_placentaM_depleted_annotated.csv")
library(stringr)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(ggkegg)
library(tidygraph)
library(scatterpie)
library(dplyr)
library(readxl)
library(readr)
library(edgeR)
library(limma)
library(Glimma)
library(clusterProfiler)
library(enrichplot)
library(gprofiler2)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_placentaF_depleted <- file.path(projectDir, "term_placentaF_depleted_annotated.csv")
import_placnetaM_depleted <- file.path(projectDir, "term_placentaM_depleted_annotated.csv")
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placentaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placnetaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
write.csv(placentaM_depleted_annotated_2, file = file.path(projectDir, "term_placentaM_depleted_annotated.csv"))
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_TMM_depletedM <- file.path(projectDir, "TMM_placentaM_term_depleted.csv")
import_DESq_depletedM <- file.path(projectDir, "DESq_placentaM_term_depleted.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# TMM_depletedM
TMM_depletedM <- read_delim(file = import_TMM_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
TMM_depletedM <- TMM_depletedM[,-1]
# DESq_depletedM
DESq_depletedM <- read_delim(file = import_DESq_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
DESq_depletedM <- DESq_depletedM[,-1]
# import the gencodev32_gff_inFile file
all_gencode_v29 <- rtracklayer::import(input_genome_gff3_file)
# this file contains more information than we need here
# subset out only the columns we need
gene_data <- data.frame(ensembl = all_gencode_v29@elementMetadata$gene_id,
hgnc_symbol = all_gencode_v29@elementMetadata$gene_name,
seqnames = all_gencode_v29@seqnames,
gene_type = all_gencode_v29@elementMetadata$gene_type)
# we're left with multiple identical rows, keep one each
gencode_v29_gene_id_symbol_chr_biotype <- gene_data %>%
dplyr::distinct(., .keep_all = TRUE)
# which leaves us with the following dimensions where there is a unique combination of ensembl ID, hgnc symbol and chromosome
dim(gencode_v29_gene_id_symbol_chr_biotype) # 64837 3
# this does however, leave us with duplicate ensembl IDs
dim(gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]) # 64792 3
# after generating a table to see the duplicates I can see that this is an X/Y chromosome issue. All genes are assigned to both chromosomes
duplicate_rows <- gencode_v29_gene_id_symbol_chr_biotype[duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl) | duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl, fromLast = TRUE),]
# remove duplicates (we don't use the chromosome information for anything)
gencode <- gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]
# tidy the TMM and DESq2 normalised dfs
## filter the df to only including the relevant pieces of information and make specific to normalisation technique
# TMM
## remove rank column
TMM_depletedM <- TMM_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(TMM_depletedM) <- gsub("tissue", "tissue_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_1", "nCPM_1_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_2", "nCPM_term_placenta_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_TMM", colnames(TMM_depletedM))
# DESq
## remove rank column
DESq_depletedM <- DESq_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(DESq_depletedM) <- gsub("tissue", "tissue_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_1", "nCPM_1_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_2", "nCPM_term_placenta_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_DESq", colnames(DESq_depletedM))
## test to ensure there are no duplicated ensembl names
sum(duplicated(TMM_depletedM$ensembl))
# left join TMM_depletedM to DESq_depletedM
placentaM_depleted <- dplyr::inner_join(TMM_depletedM, DESq_depletedM, by = join_by(ensembl))
# left join gene signature with depleted ensembl id
# left join genecode and placentaM_depleted
placentaM_depleted_annotated <- dplyr::left_join(placentaM_depleted, gencode, by = join_by(ensembl))
# tidy placentaM_depleted_annotated
## remove seqnames and genetype columns
placentaM_depleted_annotated <- dplyr::select(placentaM_depleted_annotated, -seqnames, -gene_type)
## remove the period and numbers thereafter
placentaM_depleted_annotated_2 <- tidyr::separate(placentaM_depleted_annotated, col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
deps <- c("ensembldb", "AnnotationHub")
sapply(deps, function(x){
if (!require(x, quietly = TRUE, character.only = TRUE))
BiocManager::install(x)
})
library(ensembldb)
library(AnnotationHub)
# lets take a snapshot of the AnnotationHub data base
ah <- AnnotationHub(ask = FALSE)
# take a look at the information inside
mcols(ah)
# use the `query()` function to extract the information for humans
ensdb_homo <- query(ah, c("EnsDb", "Homo sapiens"))
# keep only the information for AH95744 (which is the same as your gencode V29)
ensdb_104 <- ensdb_homo[["AH95744"]]
# Extract gene-level information and take a look
genes(ensdb_104, return.type = "data.frame") %>% View()
# now put that gene-level information into a data frame
genes_info <- genes(ensdb_104, return.type = "data.frame")
# left join genes_info with placentaM_depleted_annotated_2
## change geneid column name to ensembl
colnames(genes_info) <- gsub("gene_id", "ensembl", colnames(genes_info))
## left join the dfs
placentaM_depleted_annotated_2 <- dplyr::left_join(placentaM_depleted_annotated_2, genes_info, by = join_by(ensembl))
## tidy the df
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -11:-17)
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -12:-15)
write.csv(placentaM_depleted_annotated_2, file = file.path(projectDir, "term_placentaM_depleted_annotated.csv"))
library(stringr)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(ggkegg)
library(tidygraph)
library(scatterpie)
library(dplyr)
library(readxl)
library(readr)
library(edgeR)
library(limma)
library(Glimma)
library(clusterProfiler)
library(enrichplot)
library(gprofiler2)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData"
import_placentaF_depleted <- file.path(projectDir, "term_placentaF_depleted_annotated.csv")
import_placnetaM_depleted <- file.path(projectDir, "term_placentaM_depleted_annotated.csv")
# import placenta female depleted table and make it into a data frame
placentaF_depleted <- read_delim(import_placentaF_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy placentaF_depleted - remove the "...1" column
placentaF_depleted <- dplyr::select(placentaF_depleted, -...1)
# import male placenta depleted table and make into a data frame
placentaM_depleted <- read_delim(import_placnetaM_depleted,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy placentaM_depleted - remove the "...1" column
placentaM_depleted <- dplyr::select(placentaM_depleted, -...1)
# order genes by nCPM_ratio
placentaM_ordered <- placentaM_depleted[order(placentaM_depleted$nCPM_ratio_TMM, decreasing = TRUE),]
# perform enrichment on ordered genes
placentaM_ordered_enriched <- gost(placentaM_ordered$ensembl, organism = "hsapiens",
ordered_query = TRUE)
head(placentaM_ordered_enriched$result, 50)
# male placenta plot
placentaM_enriched_plot <- gostplot(placentaM_ordered_enriched, interactive = FALSE)
publish_gostplot(placentaM_enriched_plot, highlight_terms = c("CORUM:6417", "GO:0007275", "GO:0032502", "GO:0048731"))
# male enriched GO terms export
## make placentaF_ordered_enriched$result a df
placentaM_enriched_export <- placentaM_ordered_enriched$result %>%
as.data.frame()
## remove list column - parents
placentaM_enriched_export <- placentaM_enriched_export[,-14]
View(placentaM_enriched_plot)
## export as a cvs
write.csv(placentaM_enriched_export, file = file.path(projectDir, "early_placentaM_enrichedPathways.csv"))
## export as a cvs
write.csv(placentaM_enriched_export, file = file.path(projectDir, "term_placentaM_enrichedPathways.csv"))
