colnames(TMM_depletedF) <- gsub("tissue", "tissue_TMM", colnames(TMM_depletedF))
colnames(TMM_depletedF) <- gsub("nCPM_1", "nCPM_1_TMM", colnames(TMM_depletedF))
colnames(TMM_depletedF) <- gsub("nCPM_2", "nCPM_female_placenta_TMM", colnames(TMM_depletedF))
colnames(TMM_depletedF) <- gsub("nCPM_ratio", "nCPM_ratio_TMM", colnames(TMM_depletedF))
# DESq
## remove rank column
DESq_depletedF <- DESq_depletedF[,-3]
## rename columns to be specific to TMM normalisation
colnames(DESq_depletedF) <- gsub("tissue", "tissue_DESq", colnames(DESq_depletedF))
colnames(DESq_depletedF) <- gsub("nCPM_1", "nCPM_1_DESq", colnames(DESq_depletedF))
colnames(DESq_depletedF) <- gsub("nCPM_2", "nCPM_female_placenta_DESq", colnames(DESq_depletedF))
colnames(DESq_depletedF) <- gsub("nCPM_ratio", "nCPM_ratio_DESq", colnames(DESq_depletedF))
View(DESq_depletedF)
## test to ensure there are no duplicated ensembl names
sum(duplicated(TMM_depletedF$ensembl))
# left join TMM_depletedF to DESq_depletedF
placentaF_depleted <- dplyr::inner_join(TMM_depletedF, DESq_depletedF, by = join_by(ensembl))
# left join gene signature with depleted ensembl id
# left join genecode and placentaF_depleted
placentaF_depleted_annotated <- dplyr::left_join(placentaF_depleted, gencode, by = join_by(ensembl))
View(placentaF_depleted_annotated)
# tidy placentaF_depleted_annotated
## remove seqnames and genetype columns
placentaF_depleted_annotated <- dplyr::select(placentaF_depleted_annotated, -seqnames, -gene_type)
## remove the period and numbers thereafter
placentaF_depleted_annotated_2 <- tidyr::separate(placentaF_depleted_annotated, col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right)
View(placentaF_depleted_annotated_2)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
deps <- c("ensembldb", "AnnotationHub")
sapply(deps, function(x){
if (!require(x, quietly = TRUE, character.only = TRUE))
BiocManager::install(x)
})
library(ensembldb)
library(AnnotationHub)
# lets take a snapshot of the AnnotationHub data base
ah <- AnnotationHub(ask = FALSE)
# take a look at the information inside
mcols(ah)
# use the `query()` function to extract the information for humans
ensdb_homo <- query(ah, c("EnsDb", "Homo sapiens"))
# keep only the information for AH95744 (which is the same as your gencode V29)
ensdb_104 <- ensdb_homo[["AH95744"]]
# Extract gene-level information and take a look
genes(ensdb_104, return.type = "data.frame") %>% View()
# now put that gene-level information into a data frame
genes_info <- genes(ensdb_104, return.type = "data.frame")
# left join genes_info with placentaF_depleted_annotated_2
## change geneid column name to ensembl
colnames(genes_info) <- gsub("gene_id", "ensembl", colnames(genes_info))
## left join the dfs
placentaF_depleted_annotated_2 <- dplyr::left_join(placentaF_depleted_annotated_2, genes_info, by = join_by(ensembl))
## tidy the df
placentaF_depleted_annotated_2 <- dplyr::select(placentaF_depleted_annotated_2, -11:-17)
placentaF_depleted_annotated_2 <- dplyr::select(placentaF_depleted_annotated_2, -12:-15)
View(placentaF_depleted_annotated_2)
write.csv(placentaF_depleted_annotated_2, file = file.path(projectDir, "placenta_female_depleted_annotated.csv"))
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/sexSpecific_comparison/rawData"
import_mean_cpms_DESq <- file.path(projectDir, "mean_placenta_cpms_DESq.csv")
# import mean female cpms table
mean_cpms_DESq <- read_delim(file = import_mean_cpms_DESq,
col_names = TRUE,
delim = ",")
# remove the first column - "...1"
mean_cpms_DESq <- mean_cpms_DESq[,-1]
# copy mean_cpms for subsequent analysis
mean_cpms_DESq_cp <- as.data.frame(mean_cpms_DESq)
# make calc_rank a function
calculate_rank <- function(x) {
return(rank(-x))
}
# rank normalised cpms by female_tissue
mean_cpms_DESq[, paste0(names(mean_cpms_DESq)[-1], "_Rank")] <- apply(mean_cpms_DESq [, -1, drop = FALSE], 2, calculate_rank)
## convert sex_tissue into row names
mean_cpms_DESq <- tibble::column_to_rownames(mean_cpms_DESq, var = "sex_tissue")
# create a df selecting just for _Rank
ranked_cpms_DESq <- data.frame(mean_cpms_DESq) %>%
dplyr::select(matches("_Rank"))
# creating the rank table
## create a dataframe with geneid in rows and samples in columns
ranked_cpms_DESq <- t(ranked_cpms_DESq) %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
### remove "_Rank" from the end of the geneids
ranked_cpms_DESq <- tidyr::separate(
ranked_cpms_DESq,
col = geneid,
into = c("geneid", "right"),
sep = "_Rank") %>%
mutate(geneid = str_remove(geneid, "_Rank")) %>%
dplyr::select(-right)
# rename to sex_tissue_rank
colnames(ranked_cpms_DESq) <- gsub("female_placenta_mid", "female_placenta_rank", colnames(ranked_cpms_DESq))
colnames(ranked_cpms_DESq) <- gsub("male_placenta_mid", "male_placenta_rank", colnames(ranked_cpms_DESq))
# create the nCPMs table in the same format as rank table so they can be joined
## transpose the data frame, flips rows and columns (rows become columns and columns become rows)
nCPMs_DESq <- data.frame(mean_cpms_DESq_cp) %>%
tibble::column_to_rownames(., var = "sex_tissue") %>%
t() %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
# rename to sex_tissue_cpm
colnames(nCPMs_DESq) <- gsub("female_placenta_early", "female_placenta_cpm", colnames(nCPMs_DESq))
colnames(nCPMs_DESq) <- gsub("male_placenta_mid", "male_placenta_cpm", colnames(nCPMs_DESq))
# combine via left_join nCPMs_DESq and ranked_female_TMM
nCPMs_rank <- dplyr::left_join(ranked_cpms_DESq, nCPMs_DESq, copy = TRUE, by = join_by(geneid))
# select for when placenta_rank = 2
placenta_2_DESq <- subset(nCPMs_rank, male_placenta_rank == "2")
View(placenta_2_DESq)
# filter for where rank = 1 and cpm > 1
nCPM_rank_1_DESq <- dplyr::filter(placenta_2_DESq, female_placenta_rank == "1" & female_placenta_cpm > 1)
# separate _cpm  and _rank into its own table again
## separate cpm into its own table
nCPM_1_DESq <- tibble::column_to_rownames(nCPM_rank_1_DESq, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_cpm"))
## separate rank into its own table
rank_1_DESq <- tibble::column_to_rownames(nCPM_rank_1_DESq, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_rank"))
# convert cpm_1_TMM into long form
## convert rows into a column
nCPM_1_DESq_long <- tibble::rownames_to_column(nCPM_1_DESq, var = "geneid")
## rename, remove "_cpm"
names(nCPM_1_DESq_long) <- gsub("_cpm", "", names(nCPM_1_DESq_long))
#convert into long form
nCPM_1_DESq_long <- tidyr::gather(nCPM_1_DESq_long, tissue, cpm, female_placenta, male_placenta)
# convert rank_1_TMM into long form
## convert rows into a column
rank_1_DESq_long <- tibble::rownames_to_column(rank_1_DESq, var = "geneid")
## rename, remove "_cpm"
names(rank_1_DESq_long) <- gsub("_rank", "", names(rank_1_DESq_long))
#convert into long form
rank_1_DESq_long <- tidyr::gather(rank_1_DESq_long, tissue, rank, female_placenta, male_placenta)
rank_1_DESq_long_2 <- dplyr::filter(rank_1_DESq_long, rank == "1")
# join the long form tables - nCPM_1_TMM_long and rank_5_TMM
nCPM_rank_1_DESq_long <- dplyr::left_join(rank_1_DESq_long_2, nCPM_1_DESq_long, by = c("geneid", "tissue"))
## rename cpm to nCPM_5
colnames(nCPM_rank_1_DESq_long) <- gsub("cpm", "nCPM_1", colnames(nCPM_rank_1_DESq_long))
View(nCPM_rank_1_DESq_long)
# create a long df of just placenta_rank == 6  with ensembl IDs and cpms
## create a long df with just the instances where placenta = 6
rank_placenta_long <- filter(rank_1_DESq_long, rank == "2")
# create a long df of just placenta_rank == 6  with ensembl IDs and cpms
## create a long df with just the instances where placenta = 6
rank_placenta_long <- dplyr::filter(rank_1_DESq_long, rank == "2")
## join nCPM_5_TMM_long to rank_placenta_long to create placenta rank 6 cpms table
placenta_2_nCPM <- dplyr::left_join(rank_placenta_long, nCPM_1_DESq_long, by = c("geneid", "tissue"))
### rename so they are unique
colnames(placenta_2_nCPM) <- gsub("cpm", "nCPM_2", colnames(placenta_2_nCPM))
### remove rank and tissue columns
placenta_2_nCPM <- dplyr::select(placenta_2_nCPM, -tissue, -rank)
# join placenta_2_nCPM and nCPM_rank_5_TMM_long creating a df with both the nCPMs of rank 5 and 6
nCPM1_nCPM2_DESq <- dplyr::left_join(nCPM_rank_1_DESq_long, placenta_2_nCPM, by = "geneid")
# create a new column nCPM5/nCPM6
nCPM1_nCPM2_DESq$nCPM_ratio <- nCPM1_nCPM2_DESq$nCPM_1 / nCPM1_nCPM2_DESq$nCPM_2
# select for nCPM_ratio > 3
placentaM_depleted_DESq <- nCPM1_nCPM2_DESq[nCPM1_nCPM2_DESq$nCPM_ratio >3,]
View(placentaM_depleted_DESq)
# replace gneeid with ensembl
colnames(placentaM_depleted_DESq) <- gsub("geneid", "ensembl", colnames(placentaM_depleted_DESq))
write.csv(placentaM_depleted_DESq, file = file.path(projectDir, "DESq_placentaM_depleted.csv"))
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/sexSpecific_comparison/rawData"
import_mean_cpms_TMM <- file.path(projectDir, "mean_placenta_cpms_TMM.csv")
# import mean female cpms table
mean_cpms_TMM <- read_delim(file = import_mean_cpms_TMM,
col_names = TRUE,
delim = ",")
# remove the first column - "...1"
mean_cpms_TMM <- mean_cpms_TMM[,-1]
# copy mean_cpms for subsequent analysis
mean_cpms_TMM_cp <- as.data.frame(mean_cpms_TMM)
# make calc_rank a function
calculate_rank <- function(x) {
return(rank(-x))
}
# rank normalised cpms by female_tissue
mean_cpms_TMM[, paste0(names(mean_cpms_TMM)[-1], "_Rank")] <- apply(mean_cpms_TMM [, -1, drop = FALSE], 2, calculate_rank)
## convert sex_tissue into row names
mean_cpms_TMM <- tibble::column_to_rownames(mean_cpms_TMM, var = "sex_tissue")
# create a df selecting just for _Rank
ranked_cpms_TMM <- data.frame(mean_cpms_TMM) %>%
dplyr::select(matches("_Rank"))
# creating the rank table
## create a dataframe with geneid in rows and samples in columns
ranked_TMM <- t(ranked_cpms_TMM) %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
### remove "_Rank" from the end of the geneids
ranked_TMM <- tidyr::separate(
ranked_TMM,
col = geneid,
into = c("geneid", "right"),
sep = "_Rank") %>%
mutate(geneid = str_remove(geneid, "_Rank")) %>%
dplyr::select(-right)
# rename to sex_tissue_rank
colnames(ranked_TMM) <- gsub("female_placenta_mid", "female_placenta_rank", colnames(ranked_TMM))
colnames(ranked_TMM) <- gsub("male_placenta_mid", "male_placenta_rank", colnames(ranked_TMM))
# create the nCPMs table in the same format as rank table so they can be joined
## transpose the data frame, flips rows and columns (rows become columns and columns become rows)
nCPMs_TMM <- data.frame(mean_cpms_TMM_cp) %>%
tibble::column_to_rownames(., var = "sex_tissue") %>%
t() %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
# rename to sex_tissue_cpm
colnames(nCPMs_TMM) <- gsub("female_placenta_mid", "female_placenta_cpm", colnames(nCPMs_TMM))
colnames(nCPMs_TMM) <- gsub("male_placenta_mid", "male_placenta_cpm", colnames(nCPMs_TMM))
# combine via left_join nCPMs_TMM and ranked_female_TMM
nCPMs_rank <- dplyr::left_join(ranked_TMM, nCPMs_TMM, copy = TRUE, by = join_by(geneid))
# select for when placenta_rank = 2
placenta_2_TMM <- subset(nCPMs_rank, male_placenta_rank == "2")
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/sexSpecific_comparison/rawData"
import_mean_cpms_TMM <- file.path(projectDir, "mean_placenta_cpms_TMM.csv")
# import mean female cpms table
mean_cpms_TMM <- read_delim(file = import_mean_cpms_TMM,
col_names = TRUE,
delim = ",")
# remove the first column - "...1"
mean_cpms_TMM <- mean_cpms_TMM[,-1]
# copy mean_cpms for subsequent analysis
mean_cpms_TMM_cp <- as.data.frame(mean_cpms_TMM)
# make calc_rank a function
calculate_rank <- function(x) {
return(rank(-x))
}
# rank normalised cpms by female_tissue
mean_cpms_TMM[, paste0(names(mean_cpms_TMM)[-1], "_Rank")] <- apply(mean_cpms_TMM [, -1, drop = FALSE], 2, calculate_rank)
## convert sex_tissue into row names
mean_cpms_TMM <- tibble::column_to_rownames(mean_cpms_TMM, var = "sex_tissue")
# create a df selecting just for _Rank
ranked_cpms_TMM <- data.frame(mean_cpms_TMM) %>%
dplyr::select(matches("_Rank"))
# creating the rank table
## create a dataframe with geneid in rows and samples in columns
ranked_TMM <- t(ranked_cpms_TMM) %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
### remove "_Rank" from the end of the geneids
ranked_TMM <- tidyr::separate(
ranked_TMM,
col = geneid,
into = c("geneid", "right"),
sep = "_Rank") %>%
mutate(geneid = str_remove(geneid, "_Rank")) %>%
dplyr::select(-right)
# rename to sex_tissue_rank
colnames(ranked_TMM) <- gsub("female_placenta_mid", "female_placenta_rank", colnames(ranked_TMM))
colnames(ranked_TMM) <- gsub("male_placenta_mid", "male_placenta_rank", colnames(ranked_TMM))
# create the nCPMs table in the same format as rank table so they can be joined
## transpose the data frame, flips rows and columns (rows become columns and columns become rows)
nCPMs_TMM <- data.frame(mean_cpms_TMM_cp) %>%
tibble::column_to_rownames(., var = "sex_tissue") %>%
t() %>%
data.frame() %>%
## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
tibble::rownames_to_column("geneid")
# rename to sex_tissue_cpm
colnames(nCPMs_TMM) <- gsub("female_placenta_mid", "female_placenta_cpm", colnames(nCPMs_TMM))
colnames(nCPMs_TMM) <- gsub("male_placenta_mid", "male_placenta_cpm", colnames(nCPMs_TMM))
# combine via left_join nCPMs_TMM and ranked_female_TMM
nCPMs_rank <- dplyr::left_join(ranked_TMM, nCPMs_TMM, copy = TRUE, by = join_by(geneid))
# select for when placenta_rank = 2
placenta_2_TMM <- subset(nCPMs_rank, male_placenta_rank == "2")
View(placenta_2_TMM)
# filter for where rank = 1 and cpm > 1
nCPM_rank_1_TMM <- dplyr::filter(placenta_2_TMM, female_placenta_rank == "1" & female_placenta_cpm > 1)
# separate _cpm  and _rank into its own table again
## separate cpm into its own table
nCPM_1_TMM <- tibble::column_to_rownames(nCPM_rank_1_TMM, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_cpm"))
## separate rank into its own table
rank_1_TMM <- tibble::column_to_rownames(nCPM_rank_1_TMM, var = "geneid") %>%
data.frame() %>%
dplyr::select(matches("_rank"))
# convert cpm_1_TMM into long form
## convert rows into a column
nCPM_1_TMM_long <- tibble::rownames_to_column(nCPM_1_TMM, var = "geneid")
## rename, remove "_cpm"
names(nCPM_1_TMM_long) <- gsub("_cpm", "", names(nCPM_1_TMM_long))
#convert into long form
nCPM_1_TMM_long <- tidyr::gather(nCPM_1_TMM_long, tissue, cpm, female_placenta, male_placenta)
# convert rank_1_TMM into long form
## convert rows into a column
rank_1_TMM_long <- tibble::rownames_to_column(rank_1_TMM, var = "geneid")
## rename, remove "_cpm"
names(rank_1_TMM_long) <- gsub("_rank", "", names(rank_1_TMM_long))
#convert into long form
rank_1_TMM_long <- tidyr::gather(rank_1_TMM_long, tissue, rank, female_placenta, male_placenta)
rank_1_TMM_long_2 <- dplyr::filter(rank_1_TMM_long, rank == "1")
# join the long form tables - nCPM_1_TMM_long and rank_5_TMM
nCPM_rank_1_TMM_long <- dplyr::left_join(rank_1_TMM_long_2, nCPM_1_TMM_long, by = c("geneid", "tissue"))
## rename cpm to nCPM_5
colnames(nCPM_rank_1_TMM_long) <- gsub("cpm", "nCPM_1", colnames(nCPM_rank_1_TMM_long))
# create a long df of just placenta_rank == 6  with ensembl IDs and cpms
## create a long df with just the instances where placenta = 6
rank_placenta_long <- filter(rank_1_TMM_long, rank == "2")
# create a long df of just placenta_rank == 6  with ensembl IDs and cpms
## create a long df with just the instances where placenta = 6
rank_placenta_long <- dplyr::filter(rank_1_TMM_long, rank == "2")
## join nCPM_5_TMM_long to rank_placenta_long to create placenta rank 6 cpms table
placenta_2_nCPM <- dplyr::left_join(rank_placenta_long, nCPM_1_TMM_long, by = c("geneid", "tissue"))
### rename so they are unique
colnames(placenta_2_nCPM) <- gsub("cpm", "nCPM_2", colnames(placenta_2_nCPM))
### remove rank and tissue columns
placenta_2_nCPM <- dplyr::select(placenta_2_nCPM, -tissue, -rank)
# join placenta_2_nCPM and nCPM_rank_5_TMM_long creating a df with both the nCPMs of rank 5 and 6
nCPM1_nCPM2_TMM <- dplyr::left_join(nCPM_rank_1_TMM_long, placenta_2_nCPM, by = "geneid")
# create a new column nCPM5/nCPM6
nCPM1_nCPM2_TMM$nCPM_ratio <- nCPM1_nCPM2_TMM$nCPM_1 / nCPM1_nCPM2_TMM$nCPM_2
# select for nCPM_ratio > 3
placentaM_depleted_TMM <- nCPM1_nCPM2_TMM[nCPM1_nCPM2_TMM$nCPM_ratio >3,]
View(placentaM_depleted_TMM)
# replace gneeid with ensembl
colnames(placentaM_depleted_TMM) <- gsub("geneid", "ensembl", colnames(placentaM_depleted_TMM))
write.csv(placentaM_depleted_TMM, file = file.path(projectDir, "TMM_placentaM_depleted.csv"))
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/sexSpecific_comparison/rawData"
import_TMM_depletedM <- file.path(projectDir, "TMM_placentaM_depleted.csv")
import_DESq_depletedM <- file.path(projectDir, "DESq_placentaM_depleted.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# TMM_depletedM
TMM_depletedM <- read_delim(file = import_TMM_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
TMM_depletedM <- TMM_depletedM[,-1]
# DESq_depletedM
DESq_depletedM <- read_delim(file = import_DESq_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
DESq_depletedM <- DESq_depletedM[,-1]
# import the gencodev32_gff_inFile file
all_gencode_v29 <- rtracklayer::import(input_genome_gff3_file)
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/sexSpecific_comparison/rawData"
import_TMM_depletedM <- file.path(projectDir, "TMM_placentaM_depleted.csv")
import_DESq_depletedM <- file.path(projectDir, "DESq_placentaM_depleted.csv")
input_genome_gff3_file <- file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/gencode.v29.chr_patch_hapl_scaff.annotation.gff3")
# TMM_depletedM
TMM_depletedM <- read_delim(file = import_TMM_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
TMM_depletedM <- TMM_depletedM[,-1]
# DESq_depletedM
DESq_depletedM <- read_delim(file = import_DESq_depletedM,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
## tidy df - remove the "..1" column
DESq_depletedM <- DESq_depletedM[,-1]
# import the gencodev32_gff_inFile file
all_gencode_v29 <- rtracklayer::import(input_genome_gff3_file)
# this file contains more information than we need here
# subset out only the columns we need
gene_data <- data.frame(ensembl = all_gencode_v29@elementMetadata$gene_id,
hgnc_symbol = all_gencode_v29@elementMetadata$gene_name,
seqnames = all_gencode_v29@seqnames,
gene_type = all_gencode_v29@elementMetadata$gene_type)
# we're left with multiple identical rows, keep one each
gencode_v29_gene_id_symbol_chr_biotype <- gene_data %>%
dplyr::distinct(., .keep_all = TRUE)
# which leaves us with the following dimensions where there is a unique combination of ensembl ID, hgnc symbol and chromosome
dim(gencode_v29_gene_id_symbol_chr_biotype) # 64837 3
# this does however, leave us with duplicate ensembl IDs
dim(gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]) # 64792 3
# after generating a table to see the duplicates I can see that this is an X/Y chromosome issue. All genes are assigned to both chromosomes
duplicate_rows <- gencode_v29_gene_id_symbol_chr_biotype[duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl) | duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl, fromLast = TRUE),]
# remove duplicates (we don't use the chromosome information for anything)
gencode <- gencode_v29_gene_id_symbol_chr_biotype[!duplicated(gencode_v29_gene_id_symbol_chr_biotype$ensembl), ]
# tidy the TMM and DESq2 normalised dfs
## filter the df to only including the relevant pieces of information and make specific to normalisation technique
# TMM
## remove rank column
TMM_depletedM <- TMM_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(TMM_depletedM) <- gsub("tissue", "tissue_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_1", "nCPM_1_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_2", "nCPM_male_placenta_TMM", colnames(TMM_depletedM))
colnames(TMM_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_TMM", colnames(TMM_depletedM))
# DESq
## remove rank column
DESq_depletedM <- DESq_depletedM[,-3]
## rename columns to be specific to TMM normalisation
colnames(DESq_depletedM) <- gsub("tissue", "tissue_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_1", "nCPM_1_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_2", "nCPM_male_placenta_DESq", colnames(DESq_depletedM))
colnames(DESq_depletedM) <- gsub("nCPM_ratio", "nCPM_ratio_DESq", colnames(DESq_depletedM))
## test to ensure there are no duplicated ensembl names
sum(duplicated(TMM_depletedM$ensembl))
# left join TMM_depletedM to DESq_depletedM
placentaM_depleted <- dplyr::inner_join(TMM_depletedM, DESq_depletedM, by = join_by(ensembl))
# left join gene signature with depleted ensembl id
# left join genecode and placentaM_depleted
placentaM_depleted_annotated <- dplyr::left_join(placentaM_depleted, gencode, by = join_by(ensembl))
# tidy placentaM_depleted_annotated
## remove seqnames and genetype columns
placentaM_depleted_annotated <- dplyr::select(placentaM_depleted_annotated, -seqnames, -gene_type)
## remove the period and numbers thereafter
placentaM_depleted_annotated_2 <- tidyr::separate(placentaM_depleted_annotated, col = ensembl, into = c("ensembl", "right")) %>%
dplyr::select(., -right)
View(placentaM_depleted_annotated_2)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
deps <- c("ensembldb", "AnnotationHub")
sapply(deps, function(x){
if (!require(x, quietly = TRUE, character.only = TRUE))
BiocManager::install(x)
})
library(ensembldb)
library(AnnotationHub)
# lets take a snapshot of the AnnotationHub data base
ah <- AnnotationHub(ask = FALSE)
# take a look at the information inside
mcols(ah)
# use the `query()` function to extract the information for humans
ensdb_homo <- query(ah, c("EnsDb", "Homo sapiens"))
# keep only the information for AH95744 (which is the same as your gencode V29)
ensdb_104 <- ensdb_homo[["AH95744"]]
# Extract gene-level information and take a look
genes(ensdb_104, return.type = "data.frame") %>% View()
# now put that gene-level information into a data frame
genes_info <- genes(ensdb_104, return.type = "data.frame")
# left join genes_info with placentaM_depleted_annotated_2
## change geneid column name to ensembl
colnames(genes_info) <- gsub("gene_id", "ensembl", colnames(genes_info))
## left join the dfs
placentaM_depleted_annotated_2 <- dplyr::left_join(placentaM_depleted_annotated_2, genes_info, by = join_by(ensembl))
## tidy the df
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -11:-17)
placentaM_depleted_annotated_2 <- dplyr::select(placentaM_depleted_annotated_2, -12:-15)
View(placentaM_depleted_annotated_2)
write.csv(placentaM_depleted_annotated_2, file = file.path(projectDir, "placenta_male_depleted_annotated.csv"))
