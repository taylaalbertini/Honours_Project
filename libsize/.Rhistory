theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
# ggplot
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.3)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0)
# ggplot
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.3)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0) +
geom_segment(data = annotation_data, aes(x = start, xend = end, y = 1.1, yend = 1.1))
# ggplot
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.3)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0) +
geom_segment(data = annotation_data, aes(x = 0, xend = 12, y = 1.1, yend = 1.1))
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.3)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0)
# ggplot
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.35)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0) +
# Add horizontal bracket lines
geom_segment(data = annotation_data, aes(x = start, xend = end, y = 1.1, yend = 1.1)) +
# Add vertical bracket lines at the start
geom_segment(data = annotation_data, aes(x = start, xend = start, y = 1.05, yend = 1.1)) +
# Add vertical bracket lines at the end
geom_segment(data = annotation_data, aes(x = end, xend = end, y = 1.05, yend = 1.1)) +
# Add gestation period labels above the brackets
geom_text(data = annotation_data, aes(x = mid, y = 1.15, label = label),
hjust = 0.5, vjust = -0.5, angle = 0) +
```
# ggplot
ggplot(gestation, aes(
x = weeks,
y = what,
label = weeks
)) +
geom_line() +
geom_segment(aes(x = weeks, xend = weeks, y = 0.99, yend = 1.03)) +
geom_text(hjust = 0.5, angle = 0, vjust = -1.25) +
scale_x_continuous(name = "Weeks", expand = c(0, 0.35)) +
theme_bw() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(data = annotation_data, aes(x = x, y = y, label = label),
hjust = 0.5, vjust = 1, angle = 0)
# load relevant libraries
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/libsize"
# set path for data tables
import_metadata <- file.path(projectDir, "library_size_metadata.csv")
import_fetal_rawcounts <- file.path(projectDir, "fetal_rawcounts.csv")
# import meta data table
metaData <- read_delim(file = import_metadata,
col_names = TRUE,
delim = ",")
## remane "sampleID" to sample for consistency across tables
colnames(metaData) <- c("sample", "Tissue", "Sex", "Gestational Age")
## make first letter of all characters in "Tissue" and "Sex" column upper-case and change
metaData %<>% dplyr::mutate(., Tissue = paste(str_to_title(Tissue))) %>%
dplyr::mutate(., Sex = paste(str_to_title(Sex))) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_mid", replacement = " Mid")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_early", replacement = " Early")) %>%
dplyr::mutate(., Tissue = str_replace(Tissue, pattern = "_term", replacement = " Term"))
# import mid-gestation and other fetal tissue rawcounts table
mid_fetal <- read_delim(file = import_fetal_rawcounts,
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(mid_fetal) <- gsub("...1", "ensembl", colnames(mid_fetal), fixed = TRUE)
# import early-gestation placenta rawcounts tables
## female
earlyF <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/rawCounts_placentaF_early.csv"),
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(earlyF) <- gsub("...1", "ensembl", colnames(earlyF), fixed = TRUE)
## male
earlyM <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/oxygen_threshold/rawData/rawCounts_placentaM_early.csv"),
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(earlyM) <- gsub("...1", "ensembl", colnames(earlyM), fixed = TRUE)
# import term placenta rawcounts tables
term <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData/rawCounts_term_placenta.csv"),
col_names = TRUE,
delim = ",")
## remane "...1" ensembl
colnames(term) <- gsub("...1", "ensembl", colnames(term), fixed = TRUE)
total_rawCounts <- dplyr::full_join(mid_fetal, earlyF, by = "ensembl") %>%
dplyr::full_join(., earlyM, by = "ensembl") %>%
dplyr::full_join(., term, by = "ensembl")
# check if any NA values were introduced
sum(is.na(total_rawCounts))
# replace NA values with zeros
total_rawCounts[is.na(total_rawCounts)] <- 0
# check for any duplications of ensembl IDs
sum(duplicated(total_rawCounts$ensembl))
# make ensembl column row names
rownames(total_rawCounts) <- NULL
total_rawCounts %<>% tibble::column_to_rownames(., var = "ensembl")
# create a small data frame with information for the plot - sample name and total counts
plotCounts <- total_rawCounts %>%
colSums(.) %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
set_colnames(c("sample", "totalCounts")) %>%
arrange(., totalCounts)
# left join libsize table to metadata by sample
heatplot <- dplyr::left_join(metaData, plotCounts, by = "sample") %>%
tibble::column_to_rownames(., var = "sample")
# check for any NA values and remove those rows
na_rows <- apply(heatplot, 1, function(x) any(is.na(x)))
heatplot <- heatplot[!na_rows, ]
library(hrbrthemes)
library(viridis)
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Threshold"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
#geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off")) +
ggsave("libsize_boxplot.png", width = 10, height = 7, units = "in") ## exportd the last graph printed
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off")) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue"),
labels = c("Mean library size"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Threshold" = "red"),
labels = c("Library size cut off")) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
#scale_color_manual(name = "Legend",
# values = c("Threshold" = "red"),
#labels = c("Library size cut off")) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
#geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
solid
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "solid",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts / 1e6, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts (per million") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000 / 1e6, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718 / 1e6, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off"))
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts / 1e6, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts (per million") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000 / 1e6, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718 / 1e6, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off")) +
scale_y_continuous(breaks = c(10, 25, 50, 75, 100, 125))
ggsave("libsize_boxplot.png", width = 10, height = 7, units = "in") ## exportd the last graph printed
# create boxplot using heatplot df
ggplot(heatplot, aes(x = Tissue, y = totalCounts / 1e6, fill = Sex)) +
geom_boxplot(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_point(position = position_dodge(width = 0.8), size = 2, color = "black", alpha = 0.6) +
labs(x = "Tissue",
y = "Total Counts (per million)") +
theme_bw() +
scale_fill_manual(values = c("Male" = "blue", "Female" = "pink")) +
geom_hline(yintercept = 10000000 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "red") +
geom_line(aes(y = 10000000 / 1e6, color = "Threshold"), linewidth = 1) +
geom_hline(yintercept = 26255718 / 1e6,
show.legend = FALSE,
linetype = "dotted",
color = "blue") +
geom_line(aes(y = 26255718 / 1e6, color = "Mean"), linewidth = 1) +
scale_color_manual(name = "Legend",
values = c("Mean" = "blue", "Threshold" = "red"),
labels = c("Mean library size", "Library size cut off")) +
scale_y_continuous(breaks = c(10, 25, 50, 75, 100, 125))
ggsave("libsize_boxplot.png", width = 10, height = 7, units = "in") ## exportd the last graph printed
