---
title: "termF_rankAnalysis"
output: html_document
---

# load libraries and set project dir
```{r}
# load relevant libraries 
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)

# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/honours_project/term_sex_specific_analysis/rawData"
```

# load data files
```{r}
## load mean female TMM normalised CPM data from termPlacenta_comparison analysis
mean_termF_ncpms_TMM <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData/mean_female_cpms_termC_TMM.csv"),
                                    col_names = TRUE,
                                    delim = ",") %>% 
  as.data.frame() %>%
  # remove the first column "...1" that;s input when the file is imported
  dplyr::select(., -...1) %>% 
  ## filter data table to only include term counts - remove mid-gestation placenta in row 1
  dplyr::slice(-1)

## load mean male TMM normalised CPM data from termPlacenta_comparison analysis 
mean_termM_ncpms_TMM <- read_delim(file = file.path("/Users/taylaalbertini/Desktop/R studio/honours_project/termPlacenta_comparison/rawData/mean_male_cpms_termC_TMM.csv"),
                                    col_names = TRUE,
                                    delim = ",") %>% 
  as.data.frame() %>%
  # remove the first column "...1" that;s input when the file is imported
  dplyr::select(., -...1) %>% 
  ## filter data table to only include term counts - remove mid-gestation placenta in row 1
  dplyr::slice(-1)

## combine the two mean counts tables into one
mean_term_ncpms_TMM <- rbind(mean_termF_ncpms_TMM, mean_termM_ncpms_TMM)
## check to see if any NA values were input 
sum(is.na(mean_term_ncpms_TMM))
## make a copy of mean_term_ncpms_TMM for downstream analysis
mean_term_ncpms_TMM_cp <- as.data.frame(mean_term_ncpms_TMM)
```

# ranking TMM normalised cpms by sex_tissue
```{r}
# make calc_rank a function
calculate_rank <- function(x) {
  return(rank(-x))
}

# rank normalised cpms by sex_tissue
mean_term_ncpms_TMM[, paste0(names(mean_term_ncpms_TMM)[-1], "_Rank")] <- apply(mean_term_ncpms_TMM [, -1, drop = FALSE], 2, calculate_rank)

# create a df consistingof just '_Rank'
## convert sex_tissue from a column to row names
rownames(mean_term_ncpms_TMM) <- NULL
mean_term_ncpms_TMM <- tibble::column_to_rownames(mean_term_ncpms_TMM, var = "sex_tissue")
## create the df filtering just for _Rank
ranked_term_ncpms_TMM <- data.frame(mean_term_ncpms_TMM) %>%
  dplyr::select(matches("_Rank"))
```

# isolate all instances where female term placenta is ranked 2nd
```{r}
# creating the rank table
  ## create a dataframe with geneid in rows and samples in columns
ranked_term_TMM <- t(ranked_term_ncpms_TMM) %>%
  data.frame() %>%
   ## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
  tibble::rownames_to_column("geneid")  
  
  ### remove "_Rank" from the end of the geneids
  ranked_female_TMM <- tidyr::separate(
  ranked_female_TMM,
  col = geneid,
  into = c("geneid", "right"),
  sep = "_Rank") %>%
  mutate(geneid = str_remove(geneid, "_Rank")) %>%
  dplyr::select(-right)
  
  # rename to sex_tissue_rank
  colnames(ranked_female_TMM) <- gsub("female_placenta_mid", "female_placenta_mid_rank", colnames(ranked_female_TMM))
  colnames(ranked_female_TMM) <- gsub("female_placenta_term", "female_placenta_term_rank", colnames(ranked_female_TMM))
  
# create the nCPMs table in the same format as rank table so they can be joined
## transpose the data frame, flips rows and columns (rows become columns and columns become rows)
nCPMs_female_TMM <- data.frame(mean_female_cpms_TMM_cp) %>%
  tibble::column_to_rownames(., var = "sex_tissue") %>%
  t() %>%
  data.frame() %>%
   ## change gene ensembls from being row names to its own column, matching the format of rankComparison_female_TMM
  tibble::rownames_to_column("geneid")

   # rename to sex_tissue_cpm
 colnames(nCPMs_female_TMM) <- gsub("female_placenta_mid", "female_placenta_mid_cpm", colnames(nCPMs_female_TMM))
  colnames(nCPMs_female_TMM) <- gsub("female_placenta_term", "female_placenta_term_cpm", colnames(nCPMs_female_TMM))

# combine via left_join nCPMs_female_TMM and ranked_female_TMM
nCPMs_rank_female <- dplyr::left_join(ranked_female_TMM, nCPMs_female_TMM, copy = TRUE, by = join_by(geneid))
  
# select for when placenta_rank = 2
placenta_female_2_TMM <- subset(nCPMs_rank_female, female_placenta_term_rank == "2")
```


